name: Build and Deploy
on:
  push:
    branches-ignore:
      - 'main'
      - 'master'
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 10

      - name: Remove BOM
        run: |
           #ls . -R -l
           sudo find . -type f -name "*.md" -exec sed -i '1s/^\uFEFF//' {} +
           #sudo find . -type f -iname "*.md" -exec sed -i '1s/^\xEF\xBB\xBF//' {} +
      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.short_ref }}
          echo ${{env.BRANCH}}
          sudo find . -maxdepth 2 -iname "*.md" -print -exec cat "{}" + 

      - name: Manage folder
        run: |
          [ -d docs ] || mkdir docs
          [ -d docs/${{env.BRANCH}} ] || mkdir docs/${{env.BRANCH}}
          #cp -r src/. docs/${{env.BRANCH}}

      #- name: 🎩 Install Jekyll
      #  run: |
      #    sudo gem install bundler:2.1.4 jekyll
      #    sudo bundle _2.1.4_ install
      #- name: 🧹 Clean site
      #  run: |
      #    if [ -d "docs" ]; then
      #      rm -rf docs/*
      #    fi

      #- name: 🔨 Build site
      #  run: bundle exec jekyll build -s src -d docs/${{env.BRANCH}}
      #- name: 🧪 Deploy build
      #  run: |
      #    git config user.name "${GITHUB_ACTOR}"
      #    git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      #    git add .
      #    git commit -am "🧪 Deploy with ${GITHUB_WORKFLOW}"
      #    git push --all -f https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git




       Use GitHub Actions' cache to shorten build times and decrease load on servers
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-

       Specify the target branch (optional)
      - uses: helaili/jekyll-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          jekyll_src: src
          target_branch: gh-pages
          target_path: docs/${{env.BRANCH}}
          #keep_history: true
          build_only: true

      #- name: Cache gems
      #  uses: actions/cache@v1
      #  with:
      #    path: vendor/gems
      #    key: ${{ runner.os }}-build-${{ hashFiles('**/Gemfile.lock') }}
      #    restore-keys: |
      #      ${{ runner.os }}-build-
      #      ${{ runner.os }}-

      #- name: Build
      #  uses: DavidS/jekyll-deploy@main
      #  with:
      #    build-only: true
      #    source-dir: src
      #    #target-branch:
      #  env:
      #    JEKYLL_ENV: production
      #    GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}

      #- name: Deploy
      #  uses: JamesIves/github-pages-deploy-action@4.1.4
      #  with:
      #    branch: gh-pages # The branch the action should deploy to.
      #    folder: docs/env.BRANCH # The folder the action should deploy.
      #    target-folder: docs/env.BRANCH

      #- name: Deploy
      #  uses: Cecilapp/GitHub-Pages-deploy@v3
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    email: vvv@arenadata.io
      #    build_dir: docs/${{env.BRANCH}}
      #    branch: gh-pages
      #    jekyll: yes
      #    # commit_message: custom message # optional
    
